// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
            allowInsecureProtocol = true
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
            allowInsecureProtocol = true
        }
        maven { url'https://maven.aliyun.com/repository/public/' }
        maven { url'https://maven.aliyun.com/repository/google/' }
        maven { url'https://maven.aliyun.com/repository/jcenter/' }
        maven { url'https://maven.aliyun.com/repository/central/' }
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
    }
}
plugins {
    id 'com.android.application' version '7.3.1' apply false
    id 'com.android.library' version '7.3.1' apply false
}
def keystorePropertiesFile = rootProject.file('key.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def _storeFile = file(System.getenv("KEYSTORE") ?: keystoreProperties["storeFile"] ?: "vvex.jks")
def _storePassword = System.getenv("KEYSTORE_PASSWORD") ?: keystoreProperties["storePassword"]
def _keyAlias = System.getenv("KEY_ALIAS") ?: keystoreProperties["keyAlias"]
def _keyPassword = System.getenv("KEY_PASSWORD") ?: keystoreProperties["keyPassword"]

android {
  ...
  ...
  signingConfigs {
    release {
        storeFile _storeFile
        storePassword _storePassword
        keyAlias _keyAlias
        keyPassword _keyPassword
        v1SigningEnabled true
        v2SigningEnabled true
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }
}
